{"remainingRequest":"C:\\Users\\supag\\Desktop\\Cheque08-New\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\supag\\Desktop\\Cheque08-New\\src\\views\\cheque_approve.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\supag\\Desktop\\Cheque08-New\\src\\views\\cheque_approve.vue","mtime":1587132547507},{"path":"C:\\Users\\supag\\Desktop\\Cheque08-New\\node_modules\\css-loader\\dist\\cjs.js","mtime":1586244473185},{"path":"C:\\Users\\supag\\Desktop\\Cheque08-New\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1586244483892},{"path":"C:\\Users\\supag\\Desktop\\Cheque08-New\\node_modules\\postcss-loader\\src\\index.js","mtime":1586244478821},{"path":"C:\\Users\\supag\\Desktop\\Cheque08-New\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1586244484418},{"path":"C:\\Users\\supag\\Desktop\\Cheque08-New\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1586244469472},{"path":"C:\\Users\\supag\\Desktop\\Cheque08-New\\node_modules\\vue-loader\\lib\\index.js","mtime":1586244483891}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpib2R5ewogIGZvbnQtZmFtaWx5OiAibnVuaXRvIiwgc2Fucy1zZXJpZjsKfQpoZWFkZXJ7CiAgICBmb250LXNpemU6IDIuNWVtOwogICAgZm9udC1mYW1pbHk6ICJOdW5pdG8iLCBzYW5zLXNlcmlmOwogICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgbWFyZ2luOiA3NXB4IGF1dG8gNzVweCBhdXRvOwp9CgoKCg=="},{"version":3,"sources":["cheque_approve.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"cheque_approve.vue","sourceRoot":"src/views","sourcesContent":["<template>\n\n  <v-app>\n    \n    <v-content>\n      <navbar />\n      <header>\n      <h1>Submit Cheque</h1>\n      </header>\n      <div>\n        <v-card\n          v-for=\"n in 1\"\n          :key=\"n\"\n          class=\"pa-2\"\n          outlined\n          tile\n          >\n        <input type=\"radio\" id=\"Order Cheque\" value=\"Order Cheque\" v-model=\"picked\">\n        <label for=\"Order Cheque\">Order Cheque</label>\n        <br>\n        <input type=\"radio\" id=\"Bearer Cheque\" value=\"Bearer Cheque\" v-model=\"picked\">\n        <label for=\"Bearer Cheque\">Bearer Cheque</label>\n        <br>\n      </v-card>\n\n         <v-text-field\n      v-model=\"name\"\n      :error-messages=\"nameErrors\"\n      :counter=\"20\"\n      label=\"Name\"\n      required\n      @input=\"$v.name.$touch()\"\n      @blur=\"$v.name.$touch()\"\n    ></v-text-field>\n    <v-text-field\n      v-model=\"date\"\n      :error-messages=\"dateErrors\"\n      label=\"Date\"\n      required\n      @input=\"$v.date.$touch()\"\n      @blur=\"$v.date.$touch()\"\n    ></v-text-field>\n    <v-text-field\n      v-model=\"amount\"\n      :error-messages=\"amountErrors\"\n      label=\"Amount\"\n      required\n      @input=\"$v.amount.$touch()\"\n      @blur=\"$v.amount.$touch()\"\n    ></v-text-field>\n    <v-text-field\n      v-model=\"payeeid\"\n      :error-messages=\"payeeidErrors\"\n      label=\"Payee ID\"\n      required\n      @input=\"$v.payeeid.$touch()\"\n      @blur=\"$v.payeeid.$touch()\"\n    ></v-text-field>\n    <v-text-field\n      v-model=\"payerid\"\n      :error-messages=\"payeridErrors\"\n      label=\"Payer ID\"\n      required\n      @input=\"$v.payerid.$touch()\"\n      @blur=\"$v.payerid.$touch()\"\n    ></v-text-field>\n    <v-select\n      v-model=\"select\"\n      :items=\"items\"\n      :error-messages=\"selectErrors\"\n      label=\"Item\"\n      required\n      @change=\"$v.select.$touch()\"\n      @blur=\"$v.select.$touch()\"\n    ></v-select>\n    <v-checkbox\n      v-model=\"checkbox\"\n      :error-messages=\"checkboxErrors\"\n      label=\"Do you agree?\"\n      required\n      @change=\"$v.checkbox.$touch()\"\n      @blur=\"$v.checkbox.$touch()\"\n    ></v-checkbox>\n\n   \n    \n    <v-btn @click=\"clear\">clear</v-btn>\n    \n\n        <input \n        style=\"display: none\"\n        type=\"file\" \n        @change=\"onFileSelected\"\n        ref=\"fileInput\">\n        \n        <v-btn @click=\"$refs.fileInput.click()\">Pick File</v-btn> \n        <v-btn @click=\"onUpload\">submit</v-btn>\n      </div>\n      \n    </v-content>\n  </v-app>\n\n</template>\n<style>\nbody{\n  font-family: \"nunito\", sans-serif;\n}\nheader{\n    font-size: 2.5em;\n    font-family: \"Nunito\", sans-serif;\n    text-align: center;\n    margin: 75px auto 75px auto;\n}\n\n\n\n</style>\n<script>\nimport axios from 'axios'\nimport navbar from \"@/components/Nav\";\nimport { validationMixin } from 'vuelidate'                           //need to install vuelidate\nimport { required, maxLength } from 'vuelidate/lib/validators'   //if you run system will show in cmd what command you have to prompt\n\nexport default {\n  name: \"cheque_approve\",\n   mixins: [validationMixin],\n    validations: {\n      name: { required, maxLength: maxLength(10) },\n     \n      date:{required},\n      amount:{required},\n      payeeid:{required},\n      payerid:{required},\n      select: { required },\n      checkbox: {\n        checked (val) {\n          return val\n        },\n      },\n    },\n  \n  components: {\n    navbar,\n  },\n    \n  data: () => ({\n    picked: null\n    ,\n    return: {\n      selectedFile: null,\n       \n    },\n      name: '',\n      email: '',\n      date:'',\n      amount:'',\n      payeeid:'',\n      payerid:'',\n      select: null,\n      items: [\n        'Item 1',\n        'Item 2',\n        'Item 3',\n        'Item 4',\n      ],\n      checkbox: false,\n  }),\n\n  computed: {            //Eror show\n      checkboxErrors () {\n        const errors = []\n        if (!this.$v.checkbox.$dirty) return errors\n        !this.$v.checkbox.checked && errors.push('You must agree to continue!')\n        return errors\n      },\n      selectErrors () {\n        const errors = []\n        if (!this.$v.select.$dirty) return errors\n        !this.$v.select.required && errors.push('Item is required')\n        return errors\n      },\n      nameErrors () {\n        const errors = []\n        if (!this.$v.name.$dirty) return errors\n        !this.$v.name.maxLength && errors.push('Name must be at most 10 characters long')\n        !this.$v.name.required && errors.push('Name is required.')\n        return errors\n      },\n      dateErrors(){\n        const errors=[]\n        if(!this.$v.date.$dirty) return errors\n        !this.$v.date.required && errors.push('Date is required.')\n        return errors\n      },\n      amountErrors(){\n        const errors=[]\n        if(!this.$v.amount.$dirty) return errors\n        !this.$v.amount.required && errors.push('Amount is required.')\n        return errors\n      },\n      payeeidErrors(){\n        const errors=[]\n        if(!this.$v.payeeid.$dirty) return errors\n        !this.$v.payeeid.required && errors.push('Payee ID is required.')\n        return errors\n      },\n      payeridErrors(){\n        const errors=[]\n        if(!this.$v.payerid.$dirty) return errors\n        !this.$v.payerid.required && errors.push('Payer ID is required.')\n        return errors\n      },\n    },\n\n  methods:{\n    \n      clear () {\n        this.$v.$reset()\n        this.name = ''\n        this.date = ''\n        this.amount=''\n        this.payeeid=''\n        this.payerid=''\n        this.select = null\n        this.checkbox = false\n      },\n    \n\n    onFileSelected(event){\n      this.selectedFile = event.target.files[0]\n    },\n    onUpload(){\n      const fd = new FormData();\n      \n      fd.append('image',this.selectedFile,this.selectedFile.name)\n      fd.append('name',this.name)\n      fd.append('date',this.date)\n      fd.append('amount',this.amount)\n      fd.append('payeeid',this.payeeid)\n      fd.append('payerid',this.payerid)\n      fd.append('pick',this.picked)\n      axios.post('',fd,{             //dont forget to put destination of Data\n        onUploadProgress: uploadEvent => {\n          console.log('Upload Progress: '+ Math.round(uploadEvent.loaded / uploadEvent.total *100)+'%')\n        }\n      })\n      .then(res =>{\n        console.log(res)\n      })\n    }\n  }\n};\n</script>\n\n"]}]}